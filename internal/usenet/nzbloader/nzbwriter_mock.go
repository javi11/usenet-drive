// Code generated by MockGen. DO NOT EDIT.
// Source: ./nzbwriter.go

// Package nzbloader is a generated GoMock package.
package nzbloader

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	nzb "github.com/javi11/usenet-drive/pkg/nzb"
)

// MockNzbWriter is a mock of NzbWriter interface.
type MockNzbWriter struct {
	ctrl     *gomock.Controller
	recorder *MockNzbWriterMockRecorder
}

// MockNzbWriterMockRecorder is the mock recorder for MockNzbWriter.
type MockNzbWriterMockRecorder struct {
	mock *MockNzbWriter
}

// NewMockNzbWriter creates a new mock instance.
func NewMockNzbWriter(ctrl *gomock.Controller) *MockNzbWriter {
	mock := &MockNzbWriter{ctrl: ctrl}
	mock.recorder = &MockNzbWriterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNzbWriter) EXPECT() *MockNzbWriterMockRecorder {
	return m.recorder
}

// UpdateMetadata mocks base method.
func (m *MockNzbWriter) UpdateMetadata(filePath string, metadata nzb.UpdateableMetadata) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateMetadata", filePath, metadata)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateMetadata indicates an expected call of UpdateMetadata.
func (mr *MockNzbWriterMockRecorder) UpdateMetadata(filePath, metadata interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateMetadata", reflect.TypeOf((*MockNzbWriter)(nil).UpdateMetadata), filePath, metadata)
}
