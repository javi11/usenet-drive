// Code generated by MockGen. DO NOT EDIT.
// Source: ./connectionpool.go

// Package connectionpool is a generated GoMock package.
package connectionpool

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	nntpcli "github.com/javi11/usenet-drive/pkg/nntpcli"
)

// MockUsenetConnectionPool is a mock of UsenetConnectionPool interface.
type MockUsenetConnectionPool struct {
	ctrl     *gomock.Controller
	recorder *MockUsenetConnectionPoolMockRecorder
}

// MockUsenetConnectionPoolMockRecorder is the mock recorder for MockUsenetConnectionPool.
type MockUsenetConnectionPoolMockRecorder struct {
	mock *MockUsenetConnectionPool
}

// NewMockUsenetConnectionPool creates a new mock instance.
func NewMockUsenetConnectionPool(ctrl *gomock.Controller) *MockUsenetConnectionPool {
	mock := &MockUsenetConnectionPool{ctrl: ctrl}
	mock.recorder = &MockUsenetConnectionPoolMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUsenetConnectionPool) EXPECT() *MockUsenetConnectionPoolMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockUsenetConnectionPool) Close(c nntpcli.Connection) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Close", c)
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close.
func (mr *MockUsenetConnectionPoolMockRecorder) Close(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockUsenetConnectionPool)(nil).Close), c)
}

// Free mocks base method.
func (m *MockUsenetConnectionPool) Free(c nntpcli.Connection) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Free", c)
	ret0, _ := ret[0].(error)
	return ret0
}

// Free indicates an expected call of Free.
func (mr *MockUsenetConnectionPoolMockRecorder) Free(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Free", reflect.TypeOf((*MockUsenetConnectionPool)(nil).Free), c)
}

// Get mocks base method.
func (m *MockUsenetConnectionPool) Get() (nntpcli.Connection, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get")
	ret0, _ := ret[0].(nntpcli.Connection)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockUsenetConnectionPoolMockRecorder) Get() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockUsenetConnectionPool)(nil).Get))
}

// GetActiveConnections mocks base method.
func (m *MockUsenetConnectionPool) GetActiveConnections() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetActiveConnections")
	ret0, _ := ret[0].(int)
	return ret0
}

// GetActiveConnections indicates an expected call of GetActiveConnections.
func (mr *MockUsenetConnectionPoolMockRecorder) GetActiveConnections() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetActiveConnections", reflect.TypeOf((*MockUsenetConnectionPool)(nil).GetActiveConnections))
}

// GetFreeConnections mocks base method.
func (m *MockUsenetConnectionPool) GetFreeConnections() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFreeConnections")
	ret0, _ := ret[0].(int)
	return ret0
}

// GetFreeConnections indicates an expected call of GetFreeConnections.
func (mr *MockUsenetConnectionPoolMockRecorder) GetFreeConnections() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFreeConnections", reflect.TypeOf((*MockUsenetConnectionPool)(nil).GetFreeConnections))
}

// GetMaxConnections mocks base method.
func (m *MockUsenetConnectionPool) GetMaxConnections() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMaxConnections")
	ret0, _ := ret[0].(int)
	return ret0
}

// GetMaxConnections indicates an expected call of GetMaxConnections.
func (mr *MockUsenetConnectionPoolMockRecorder) GetMaxConnections() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMaxConnections", reflect.TypeOf((*MockUsenetConnectionPool)(nil).GetMaxConnections))
}
